name: CD - Deploy to Production

on:
  workflow_run:
    workflows: ["CI - Run Tests and Build Images"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy to EC2 via SSM
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Prepare SSM parameters
        run: |
          # Base64エンコードで環境変数を安全に転送
          DOT_ENV_BASE64=$(echo "${{ secrets.DOT_ENV_PRODUCTION }}" | base64 -w 0)
          echo "Environment variables encoded successfully"
          echo "DOT_ENV_BASE64<<EOF" >> $GITHUB_ENV
          echo "$DOT_ENV_BASE64" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Deploy to EC2 instances
        run: |
          instance_ids=("${{ secrets.EC2_INSTANCE_ID_1 }}" "${{ secrets.EC2_INSTANCE_ID_2 }}")
          
          for instance_id in "${instance_ids[@]}"; do
            if [ -n "$instance_id" ]; then
              echo "--- Deploying to instance: $instance_id ---"

              # Create SSM parameters JSON
              cat << SSMEOF > /tmp/ssm_parameters.json
          {
              "commands": [
                  "set -euo pipefail",
                  "export HOME=/home/ec2-user",
                  "export PATH=/usr/local/bin:/usr/bin:/bin",
                  "cd /home/ec2-user/yubikirigennmann",
                  "git config --global --add safe.directory /home/ec2-user/yubikirigennmann",
                  "git config --global user.name 'EC2 Deploy'",
                  "git config --global user.email 'deploy@ec2.local'",
                  "echo 'Fetching latest changes...'",
                  "git fetch origin main",
                  "echo 'Resetting to latest main branch...'",
                  "git reset --hard origin/main",
                  "echo 'Checking if deploy script exists...'",
                  "if [ ! -f '.github/scripts/deploy.sh' ]; then echo 'Deploy script not found!'; exit 1; fi",
                  "echo 'Making deploy script executable...'",
                  "chmod +x .github/scripts/deploy.sh",
                  "echo 'Running deploy script...'",
                  ".github/scripts/deploy.sh '${{ env.DOT_ENV_BASE64 }}' '${{ secrets.AWS_ACCOUNT_ID }}' '${{ secrets.AWS_REGION }}' '${{ secrets.ECR_API_REPOSITORY }}'"
              ]
          }
          SSMEOF

              command_id=$(aws ssm send-command \
                --region ${{ secrets.AWS_REGION }} \
                --instance-ids "$instance_id" \
                --document-name "AWS-RunShellScript" \
                --parameters file:///tmp/ssm_parameters.json \
                --timeout-seconds 1200 \
                --query "Command.CommandId" \
                --output text)
              
              echo "Command ID: $command_id"
              
              echo "Waiting for command to complete..."
              aws ssm wait command-executed \
                --region ${{ secrets.AWS_REGION }} \
                --command-id "$command_id" \
                --instance-id "$instance_id" || ( \
                  echo "Command failed. Fetching details..." >&2 && \
                  aws ssm get-command-invocation --region ${{ secrets.AWS_REGION }} --command-id "$command_id" --instance-id "$instance_id" --query "StandardErrorContent" --output text >&2 && \
                  exit 1 \
                )
              
              echo "Command completed successfully. Fetching output..."
              aws ssm get-command-invocation \
                --region ${{ secrets.AWS_REGION }} \
                --command-id "$command_id" \
                --instance-id "$instance_id" \
                --query "StandardOutputContent" \
                --output text
            fi
          done